import org.gradle.plugins.ide.eclipse.model.SourceFolder

apply plugin: 'war'
apply plugin: 'pmd'
apply plugin : 'eclipse-wtp'

repositories {
    mavenCentral()
}

pmd {
    ruleSets = [
            "basic",
            "braces",
			"naming"
            ]
	ignoreFailures = true
	sourceSets = [sourceSets.main]
}

dependencies {
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"

    compile 'org.springframework:spring-webmvc:4.0.5.RELEASE'
    compile 'org.springframework:spring-web:4.0.5.RELEASE'
    compile 'org.springframework:spring-orm:4.0.5.RELEASE'
    compile 'org.springframework:spring-context:4.0.5.RELEASE'
    compile 'org.hibernate:hibernate-entitymanager:4.3.5.Final'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'

    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.ninja-squad:DbSetup:1.2.0'
    testCompile 'org.springframework:spring-test:4.0.5.RELEASE'

    runtime 'org.aspectj:aspectjweaver:1.7.2'
    runtime 'org.hsqldb:hsqldb:2.2.9'
    runtime 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:jcl-over-slf4j:1.7.5' // because Spring uses commons-logging
    runtime 'log4j:log4j:1.2.14'
}

war {
    archiveName 'ROOT.war'
}

eclipse.classpath.file.whenMerged { cp ->
    cp.entries.findAll { it instanceof SourceFolder && it.path.startsWith("src/test/") }*.output = "test-bin"
}